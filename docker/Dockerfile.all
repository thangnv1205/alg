# Multi-Language Environment Dockerfile
FROM ubuntu:22.04

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Build tools
    build-essential \
    gcc \
    g++ \
    make \
    cmake \
    # Node.js
    curl \
    # Python
    python3 \
    python3-pip \
    python3-dev \
    # Java
    openjdk-17-jdk \
    # C# (.NET)
    wget \
    apt-transport-https \
    # Go
    # Rust
    # Assembly
    nasm \
    # Other languages
    php \
    ruby \
    # Git
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Install .NET
RUN wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \
    && dpkg -i packages-microsoft-prod.deb \
    && apt-get update \
    && apt-get install -y dotnet-sdk-6.0

# Install Go
RUN wget https://go.dev/dl/go1.21.0.linux-amd64.tar.gz \
    && tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz

# Install Rust
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# Install Dart
RUN apt-get update && apt-get install -y apt-transport-https \
    && wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && wget -qO- https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list \
    && apt-get update && apt-get install -y dart

# Install Elixir
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    && wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb \
    && dpkg -i erlang-solutions_2.0_all.deb \
    && apt-get update \
    && apt-get install -y esl-erlang elixir

# Install Kotlin
RUN curl -s https://get.sdkman.io | bash \
    && bash -c "source ~/.sdkman/bin/sdkman-init.sh && sdk install kotlin"

# Install Racket
RUN apt-get update && apt-get install -y racket

# Install Scala
RUN wget https://downloads.lightbend.com/scala/2.13.11/scala-2.13.11.tgz \
    && tar -xzf scala-2.13.11.tgz \
    && mv scala-2.13.11 /opt/scala

# Install Swift (for Ubuntu)
RUN wget -q -O - https://swift.org/keys/swift-signing-key.pub | apt-key add - \
    && echo "deb https://download.swift.org/ubuntu/ jammy main" > /etc/apt/sources.list.d/swift.list \
    && apt-get update && apt-get install -y swift

# Install TypeScript globally
RUN npm install -g typescript

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Create build directories
RUN mkdir -p build test-results benchmark-results

# Set environment variables
ENV PATH="/usr/local/go/bin:/root/.cargo/bin:/opt/scala/bin:/opt/dart-sdk/bin:${PATH}"
ENV JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
ENV DART_SDK="/opt/dart-sdk"
ENV SCALA_HOME="/opt/scala"

# Install Node.js dependencies
RUN npm install

# Install Python dependencies
RUN pip3 install --no-cache-dir \
    numpy \
    pandas \
    matplotlib \
    scipy \
    scikit-learn

# Expose port for API
EXPOSE 3000

# Default command - run all algorithms
CMD ["node", "scripts/run_all.js", "--all"]
